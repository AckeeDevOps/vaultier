stages:
  - test
  - lint
  - build

# test tbd
# lint tbd

before_script:
  - echo $CI_PIPELINE_SOURCE
  - apk add git
  - mkdir -p /go/src/github.com/AckeeDevOps
  - go get -u golang.org/x/lint/golint
  - go get -u github.com/kyoh86/richgo
  - ln -sf $CI_PROJECT_DIR /go/src/github.com/AckeeDevOps/vaultier
  - cd /go/src/github.com/AckeeDevOps/vaultier
  - export CGO_ENABLED=0
  - export GOOS=linux

# run everytime
unit test:
  image: golang:1.11.4-alpine3.8
  stage: test
  script:
    - go test $(go list ./... | grep -v /vendor/) -v -cover

# run everytime, this verifies whether 
# compiler is able to compile the code
build test:
  image: golang:1.11.4-alpine3.8
  stage: test
  script:
    - go build -a -installsuffix cgo -o vaultier

# run everytime
lint: 
  image: golang:1.11.4-alpine3.8
  stage: lint
  script:
    - golint . config client

# run only when it's tagged
build final:
  image: golang:1.11.4-alpine3.8
  stage: build
  script:
    - go build -a -installsuffix cgo -o vaultier-$CI_COMMIT_TAG
  only:
    variables:
      - $CI_COMMIT_TAG
  artifacts:
    paths:
      - vaultier-*

