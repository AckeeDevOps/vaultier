stages:
  - test
  - lint
  - build

# test tbd
# lint tbd

before_script:
  - echo $CI_PIPELINE_SOURCE
  - mkdir -p /go/src/github.com/vranystepan
  - ln -sf $CI_PROJECT_DIR /go/src/github.com/vranystepan/vaultier
  - cd /go/src/github.com/vranystepan/vaultier

# run everytime
unit test:
  image: golang:1.11.4-alpine3.8
  stage: test
  script:
    - go test -v

# run everytime, this verifies whether 
# compiler is able to compile the code
build test:
  image: golang:1.11.4-alpine3.8
  stage: test
  script:
    - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o vaultier

# run only when it's tagged
build final:
  image: golang:1.11.4-alpine3.8
  stage: build
  script:
    - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o vaultier
  only:
    variables:
      - $CI_COMMIT_TAG
  artifacts:
    paths:
      - vaultier

